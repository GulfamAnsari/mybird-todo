{"version":3,"sources":["components/header/Header.js","components/footer/Footer.js","components/scrol/Scrol.js","components/log-in/Login.js","components/sign-up/Signup.js","store/actions.js","helper/helper-functions.js","pages/home/Home.js","components/add-task/AddTask.js","components/completed-task/CompletedTask.js","components/tasks/Task.js","pages/todo/Todo.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["Header","react_default","a","createElement","className","Footer","role","Scrol","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","window","addEventListener","handleScroll","passive","componentWillUnmount","removeEventListener","event","innerHeight","document","documentElement","scrollTop","offsetHeight","setState","isLoading","setTimeout","elementList","state","elementListLength","length","push","name","_this$state","Fragment","map","ele","index","key","Component","Login","signIn","username","password","remebmer","target","checked","value","_this2","onSubmitHandler","onSubmit","htmlFor","required","onChange","signInOnChangeHandler","bind","id","type","data-type","react_router_dom","to","href","Signup","signUp","repeat","email","signUpOnChangeHandler","fetchTasks","dispatch","getCookie","cname","ca","decodeURIComponent","cookie","split","i","c","charAt","substring","indexOf","Home","token","hlp","jwt","verify","err","decoded","getUserData","selectedForm","error","Axios","post","Content-Type","then","result","tasks","data","history","pathname","payload","preventDefault","gotoDashboard","usertype","url","_this3","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","user","_React$createElement","_React$createElement2","_this4","style","color","defineProperty","formSelectionHanndler","Login_Login","Signup_Signup","connect","taskState","_ref","actions","AddTask","openNewTodo","toggleTodoHandler","addNewTodoHandler","formData","title","description","priority","onChangeHandler","onClick","toLocaleString","placeholder","rows","cols","CompletedTask","_this$props","completedTask","removeCompletedTaskHandler","num","toLowerCase","React","memo","task","deleteTaskHandler","addCompletedTaskHandler","draggable","time","Todo","authState","isAuthenticated","get","response","localForage","getItem","updateTasks","updatedResponse","slice","body","completed","prevState","splice","onDragStart","console","log","tasks_Task","AddTask_AddTask","completed_task_CompletedTask","getState","setItem","success","App","react_router","path","exact","component","Boolean","location","hostname","match","initialState","Reducer","arguments","undefined","action","objectSpread","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.930089ad.chunk.js","sourcesContent":["import React from 'react';\nimport './Header';\n\nexport default function Header() {\n  return (\n    <header className=\"page-title\">\n      <h1>  <i className=\"material-icons\">view_list</i>\n        TODO</h1>\n      <div className=\"tag\"> An easy way to manage your work. <span className=\"caret\">|</span></div>\n    </header>\n  )\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer role=\"contentinfo\" className=\"footer\">\n      <i className=\"material-icons\">favorite</i>Made with love for MyBird TODO\n        </footer>\n  )\n}\n","import React, { Component } from 'react'\nimport './Scrol.css';\n\nexport default class Scrol extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      elementList: [{ name: 1 }, { name: 2 }, { name: 3 }],\n      isLoading: false\n    }\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.handleScroll, { passive: true });\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = (event) => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\n      this.setState({\n        isLoading: true\n      });\n    } else {\n      setTimeout(() => {\n        const { elementList } = this.state;\n        const elementListLength = elementList.length;\n        elementList.push({ name: elementListLength });\n        this.setState({\n          elementList: elementList,\n          isLoading: false\n        });\n      }, 3000);\n    }\n  }\n\n  render() {\n    const { elementList, isLoading } = this.state;\n    return (\n      <React.Fragment>\n        <div>\n          {\n            elementList.map((ele, index) => {\n              return <div className=\"scrol\" key={index}>{ele.name}</div>;\n            })\n          }\n        </div>\n        <div className=\"loading\">\n          {\n            isLoading ? 'Loading...' : ''\n          }\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      signIn: {\n        username: '',\n        password: '',\n        remebmer: false\n      },\n      name: 'sign-in'\n    }\n  }\n\n  signInOnChangeHandler(event) {\n    const { signIn } = this.state;\n    if (event.target.name === 'remebmer') {\n      signIn[event.target.name] = event.target.checked;\n    } else {\n      signIn[event.target.name] = event.target.value;\n    }\n    this.setState({\n      signIn\n    });\n  }\n\n  render() {\n    const { onSubmitHandler } = this.props;\n\n    return (\n      <form onSubmit={(event) => { onSubmitHandler(event, this.state) }} className=\"sign-in-htm\">\n        <div className=\"group\">\n          <label htmlFor=\"user\" className=\"label\">Email</label>\n          <input required onChange={this.signInOnChangeHandler.bind(this)} id=\"user\" name=\"username\" type=\"text\" className=\"input\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Password</label>\n          <input required onChange={this.signInOnChangeHandler.bind(this)} id=\"pass\" type=\"password\" name=\"password\" className=\"input\" data-type=\"password\" />\n        </div>\n        <div className=\"group\">\n          <input onChange={this.signInOnChangeHandler.bind(this)} id=\"check\" type=\"checkbox\" name=\"remebmer\" className=\"check\" />\n          <label htmlFor=\"check\"><span className=\"icon\"></span> Keep me Signed in</label>\n        </div>\n        <div className=\"group\">\n          <input type=\"submit\" className=\"button\" name=\"sign-in\" value=\"Sign In\" />\n        </div>\n        <div className=\"hr\"></div>\n        <div className=\"foot-lnk\">\n          <Link to=\"/todos\">Use App without Login</Link>\n        </div>\n        <div className=\"hr\"></div>\n        <div className=\"foot-lnk\">\n          <a href=\"#forgot\">Forgot Password?</a>\n        </div>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Signup extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      signUp: {\n        username: '',\n        password: '',\n        repeat: '',\n        email: ''\n      },\n      name: 'sign-up'\n    }\n  }\n\n  signUpOnChangeHandler(event) {\n    const { signUp } = this.state;\n    signUp[event.target.name] = event.target.value;\n    this.setState({\n      signUp\n    });\n  }\n\n  render() {\n    const { onSubmitHandler } = this.props;\n    return (\n      <form onSubmit={(event) => { onSubmitHandler(event, this.state) }} className=\"sign-up-htm\">\n        <div className=\"group\">\n          <label htmlFor=\"user\" className=\"label\">Username</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"user\" name=\"username\" type=\"text\" className=\"input\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Password</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"pass\" type=\"password\" name=\"password\" className=\"input\" data-type=\"password\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Repeat Password</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"pass\" type=\"password\" name=\"repeat\" className=\"input\" data-type=\"password\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Email Address</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"pass\" type=\"text\" name=\"email\" className=\"input\" />\n        </div>\n        <div className=\"group\">\n          <input type=\"submit\" className=\"button\" name=\"sign-up\" value=\"Sign Up\" />\n        </div>\n        <div className=\"hr\"></div>\n        <div className=\"foot-lnk\">\n          <label htmlFor=\"tab-1\">Already Member?</label>\n        </div>\n      </form>\n    )\n  }\n}\n","import localForage from 'localforage';\nimport Axios from 'axios';\n\nexport const updateTask = (value) => {\n  return (dispatch, getState) => {\n    const tasks = {\n      type: 'UPDATE_TASK',\n      value: value\n    }\n    if (getState().authState.isAuthenticated) {\n      Axios.post('https://mybird-todo.herokuapp.com/send-data', { tasks: value, email: getState().authState.email }, { 'Content-Type': 'application/json' }).then((result) => {\n        dispatch(tasks);\n      });\n    } else {\n      localForage.setItem('tasks', tasks).then((success) => {\n        dispatch(success);\n      });\n    }\n  }\n}\n\nexport const fetchTasks = (value) => {\n  return (dispatch) => {\n    const tasks = {\n      type: 'FETCH_TASKS_DATA',\n      value: value\n    }\n    dispatch(tasks);\n  }\n}","export const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport const setCookie = (cname, cvalue, exdays) => {\n  var d = new Date();\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}","import React, { Component } from 'react';\nimport Login from '../../components/log-in/Login';\nimport Signup from '../../components/sign-up/Signup';\nimport Axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport * as hlp from '../../helper/helper-functions';\n\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedForm: 'sign-in',\n      error: ''\n    }\n  }\n\n  componentDidMount = () => {\n    const token = hlp.getCookie('token');\n    if (token) {\n      jwt.verify(token, 'secretkey23456', (err, decoded) => {\n        if (decoded) {\n          this.getUserData(decoded.email);\n        }\n      });\n    }\n  };\n\n  getUserData(email) {\n    Axios.post('https://mybird-todo.herokuapp.com/get-data', { email: email }, { 'Content-Type': 'application/json' }).then((result) => {\n      const tasks = result.data.tasks;\n      this.props.fetchTasks({ tasks: tasks, email: result.data.email });\n      setTimeout(() => {\n        this.props.history.push({ pathname: '/todos' });\n      }, 1000);\n    })\n  }\n\n  formSelectionHanndler(event) {\n    this.setState({\n      selectedForm: event.target.name\n    })\n  }\n\n  onSubmitHandler(event, payload) {\n    event.preventDefault();\n    if (payload.name === 'sign-in') {\n      const data = {\n        email: payload.signIn.username,\n        password: payload.signIn.password,\n      }\n      this.gotoDashboard('/login', data);\n    } else if (payload.name === 'sign-up') {\n      const data = {\n        email: payload.signUp.email,\n        username: payload.signUp.username,\n        password: payload.signUp.password,\n        usertype: 'admin'\n      }\n      this.gotoDashboard('/signup', data);\n    }\n  }\n\n  gotoDashboard(url, data) {\n    Axios.post('https://mybird-todo.herokuapp.com' + url, data, { 'Content-Type': 'application/json' }).then((result) => {\n      if (result.data) {\n        hlp.setCookie('token', result.data['access_token'], result.data['expires_in']);\n        this.getUserData(result.data.user.email);\n      } else if (!result.data && url === '/signup') {\n        this.setState({\n          error: 'User Already Exists.'\n        });\n\n      } else if (!result.data && url === '/login') {\n        this.setState({\n          error: 'Please check your email and password'\n        });\n      }\n    })\n  }\n\n  render() {\n    const { selectedForm, error } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"login-wrap\">\n          <div className=\"login-html\">\n            <p style={{ color: '#8e0428f7' }}>{error}</p>\n            <input id=\"tab-1\" type=\"radio\" name=\"tab\" className=\"sign-in\" name=\"sign-in\" checked={selectedForm === 'sign-in' ? true : false} onChange={this.formSelectionHanndler.bind(this)} /><label htmlFor=\"tab-1\" className=\"tab\">Sign In</label>\n            <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"sign-up\" name=\"sign-up\" checked={selectedForm === 'sign-up' ? true : false} onChange={this.formSelectionHanndler.bind(this)} /><label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\n            <div className=\"login-form\">\n              <Login onSubmitHandler={(event, payload) => { this.onSubmitHandler(event, payload) }} />\n              <Signup onSubmitHandler={(event, payload) => { this.onSubmitHandler(event, payload) }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    taskState: state.taskState\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTasks: ({ tasks, email }) => dispatch(actions.fetchTasks({ tasks, email })),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport './AddTask.css';\n\nexport default function AddTask({ openNewTodo, toggleTodoHandler, addNewTodoHandler }) {\n\n  let formData = {\n    title: '',\n    description: '',\n    priority: 'High'\n  };\n\n\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    formData['time'] = new Date().toLocaleString();\n    addNewTodoHandler(formData);\n  }\n\n  function onChangeHandler(event) {\n    formData[event.target.name] = event.target.value;\n  }\n\n  return (\n    <main role=\"main\" className={openNewTodo ? 'main-wrap' : 'hidden'}>\n      <header role=\"heading\" className=\"header\">\n        <h1 className=\"app-header\"> Add your task <span className=\"close-add-task\" onClick={() => { toggleTodoHandler(false) }}>X</span></h1>\n      </header>\n      <section className=\"main-content\">\n        <section className=\"todo-form\">\n          <form role=\"form\" id=\"todoForm\" onSubmit={onSubmitHandler}>\n            <div className=\"row\">\n              <label htmlFor=\"title\"> Title </label>\n              <input onChange={onChangeHandler} className=\"form-input\" name=\"title\" id=\"title\" type=\"text\" placeholder=\"Learn JavaScript\" />\n            </div>\n            <div className=\"row\">\n              <label htmlFor=\"description\"> Description </label>\n              <textarea onChange={onChangeHandler} id=\"description\" name=\"description\" rows=\"4\" cols=\"30\" placeholder=\"Coz you already know Java\"></textarea>\n            </div>\n            <div className=\"row\">\n              <label htmlFor=\"priority\"> Priority </label>\n              <select onChange={onChangeHandler} id=\"priority\" name=\"priority\">\n                <option value=\"high\">High</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"low\">Low</option>\n              </select>\n            </div>\n            <div className=\"row submit-btn\">\n              <input onChange={onChangeHandler} type=\"submit\" className=\"primary-button\" value=\"DO IT\" />\n            </div>\n          </form>\n        </section>\n      </section>\n    </main>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nclass CompletedTask extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    // console.log('[completedTask.js] In construction and props is', props);\n  }\n\n  /****************** Life Cycle Method for Demo Purposes *******************************/\n  /**\n   * This lifecycle function called each time whenevr the component\n   * props or state changes and retutn something. This method execute\n   * after the construction()\n   */\n  // static getDerivedStateFromProps(props, state) {\n  //     console.log('[completedTask.js] getDerivedStateFromProps and props, state is', props, state);\n  //     return state;\n  // }\n\n  // /**\n  //  * This lifecycle method called each time after the getderivedStateFromProps method\n  //  * The main purpose if this method is to cancle the updating process. \n  //  * This method should return true or false only. True means accept\n  //  * You can extend PureComponent class to render the UI on the basis of props changes.\n  //  */\n  // shouldComponentUpdate = (nextProps, nextState) => {\n  //     console.log('[completedTask.js] shouldComponentUpdate', nextProps, nextState);\n  //     return true;\n  // };\n\n  /************************************************************************************/\n  render() {\n    // console.log('[completedTask.js] render');\n    const { completedTask, removeCompletedTaskHandler, num } = this.props;\n    return (\n      <li className={\"todo-item \" + completedTask.priority.toLowerCase()}>\n        <div className=\"icon-check\">\n          <i className=\"pad-15 material-icons md-36 md-light\" onClick={() => { removeCompletedTaskHandler(completedTask.key) }}>check_circle</i>\n        </div>\n\n        <div className=\"icon-delete\">\n          <i className=\"pad-15 material-icons md-36 md-light\" onClick={() => { removeCompletedTaskHandler(completedTask.key) }}>delete</i>\n        </div>\n        <div className=\"content\">\n          {completedTask.title}\n        </div>\n      </li>\n    )\n  }\n\n  /****************** Life Cycle Method for Demo Purposes *******************************/\n  /**\n * This Lifecycle function once when the component is created after the\n * render() method. So because it runs only once, you can do some request\n * to fetch the application data.\n */\n  // componentDidMount = () => {\n  //     console.log('[completedTask.js] componentDidMount');\n  // };\n\n  // /**\n  //  * This lifecycle method called each time after render() method. This method have access\n  //  * to DOM and can update the dom element.\n  //  */\n  // getSnapshotBeforeUpdate(prevProp, prevState) {\n  //     console.log('[completedTask.js] getSnapshotBeforUpdate');\n  //     return { snap: 'snaplshot' }\n  // }\n\n  // /**\n  //  * This lifecycle method called each time after when something is updated\n  //  * in the state of the component\n  //  */\n  // componentDidUpdate = (prop, state, snap) => {\n  //     console.log('[completedTask.js] componentDidUpdate', prop, state, snap)\n  // }\n\n  // /**\n  //  * This lifecycle method called once when the component is destroyed\n  //  */\n  // componentWillUnmount = () => {\n  //     console.log('[completedTask.js] componentWillUnmount')\n  // };\n  /************************************************************************************/\n}\n\nCompletedTask.propTypes = {\n  completedTask: PropTypes.object,\n  removeCompletedTaskHandler: PropTypes.func\n};\n\nexport default CompletedTask;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Task(props) {\n  const { task, deleteTaskHandler, addCompletedTaskHandler } = props;\n\n  /************************** React hooks *********************************************/\n  /**\n   * Use effect function of react hook calls everytime after render method\n   * when something change in the component.\n   * You can restrict the useeffect running cycle by passing the 2nd argument as an array.\n   */\n  // useEffect(() => {\n  //     console.log('[Task.js] useEffect() React hook');\n  // });\n\n  // This is only called when delete handler is chnages, you can leave empty array\n  // if you want to call useEffect() only once\n  // useEffect(() => {\n  //     console.log('[Task.js] useEffect() React hook when task changes');\n  // }, [task]);\n\n  // useEffect(() => {\n  //     return () => {\n  //         console.log('[Task.js] useEffect() React hook cleanup task go here');\n  //     }\n  // }, []);\n  /****************************************************************************************/\n\n  return (\n    <li draggable=\"true\" className={'todo-item ' + task.priority.toLowerCase()}>\n      <div className=\"card\">\n        <h3 className=\"todo-title\">\n          <span className=\"action\">\n            <i className=\"material-icons md-36 icon-delete\" onClick={() => { deleteTaskHandler(task.key) }}>delete</i>\n            <i className=\"icon-checkbox-outline material-icons md-36 md-dark\" onClick={() => { addCompletedTaskHandler(task.key) }}>check_box_outline_blank</i>\n            <i className=\"icon-checkbox material-icons md-36 md-light\">check_box</i>\n          </span>\n          <span className=\"title\">{task.title} </span></h3>\n        <p className=\"todo-description\">\n          {task.description} </p>\n        <span className=\"todo-priority\"> {task.priority}</span>\n        <span className=\"time\">{task.time}</span>\n      </div>\n    </li>\n  )\n}\n\nTask.propTypes = {\n  task: PropTypes.object,\n  deleteTaskHandler: PropTypes.func,\n  addCompletedTaskHandler: PropTypes.func\n};\n\n// React memo take the screenshot of current component props. So if nothing is changes then\n// DOM does not rerender\nexport default React.memo(Task);\n","import React, { Component } from 'react';\nimport AddTask from '../../components/add-task/AddTask';\nimport CompletedTask from '../../components/completed-task/CompletedTask';\nimport Task from '../../components/tasks/Task';\nimport Axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport { connect } from 'react-redux';\nimport localForage from 'localforage';\nimport * as actions from '../../store/actions';\nimport * as hlp from '../../helper/helper-functions';\n\nclass Todo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      openNewTodo: false\n    }\n  }\n\n  toggleTodoHandler(value) {\n    // Use setState function argument as a function if your new state is dependent on\n    // prevous one else you should use object as argument\n    this.setState((prevState, props) => {\n      return { openNewTodo: value };\n    });\n  }\n\n\n  addNewTodoHandler(data) {\n    const { tasks } = this.props.taskState;\n    tasks.push(data);\n    this.props.updateTasks(tasks);\n    this.toggleTodoHandler(false);\n  }\n\n  deleteTaskHandler(index) {\n    const { tasks } = this.props.taskState;\n    tasks.splice(index, 1);\n    this.props.updateTasks(tasks);\n  }\n\n  removeCompletedTaskHandler(index) {\n    const { tasks } = this.props.taskState;\n    tasks[index].completed = false;\n    this.props.updateTasks(tasks);\n  }\n\n  addCompletedTaskHandler(index) {\n    const { tasks } = this.props.taskState;\n    tasks[index].completed = true;\n    this.props.updateTasks(tasks);\n  }\n\n  render() {\n    const { tasks } = this.props.taskState;\n    const { openNewTodo } = this.state;\n\n    return (\n      <section className=\"todo-list-container\">\n        <div className=\"todo-in-progress\">\n          <h2> Working tasks</h2>\n          <ul onDragStart={() => { console.log('on drag called') }} className=\"todo-list\" id=\"target\">\n            {/* Warning Task */}\n            {\n              tasks.map((task, index) => {\n                // setting index as  a key is not a good way\n                if (!task.completed) {\n                  return <Task\n                    task={task}\n                    key={index}\n                    deleteTaskHandler={() => { this.deleteTaskHandler(index) }}\n                    addCompletedTaskHandler={() => { this.addCompletedTaskHandler(index) }}\n                  />\n                }\n              })\n            }\n\n            {/* To add new todo task */}\n            <li className=\"todo-item new\">\n              <div className=\"card\" onClick={() => this.toggleTodoHandler(true)}>\n                <h3 className=\"todo-title\"> <span className=\"action\">\n                  <i className=\"complete material-icons md-36 md-light\">add_circle_outline</i>\n                </span>\n                  <span className=\"title\">ADD A TODO</span></h3>\n              </div>\n            </li>\n\n            {/* New Task creator form pop up */}\n            <AddTask\n              openNewTodo={openNewTodo}\n              toggleTodoHandler={this.toggleTodoHandler.bind(this)}\n              addNewTodoHandler={this.addNewTodoHandler.bind(this)}\n            />\n          </ul>\n        </div>\n\n        {/* completed todo task of app */}\n        <div className=\"todo-completed\">\n          <ul className=\"todo-list-completed\">\n            <h2> Completed Tasks </h2>\n            {\n              tasks.map((task, index) => {\n                if (task.completed) {\n                  return <CompletedTask\n                    completedTask={task}\n                    key={index}\n                    removeCompletedTaskHandler={this.removeCompletedTaskHandler.bind(this, index)}\n                  />\n                }\n              })\n            }\n          </ul>\n        </div>\n      </section>\n    )\n  }\n\n  /**\n * This Lifecycle function once when the component is created after the\n * render() method. So because it runs only once, you can do some request\n * to fetch the application data.\n */\n  componentDidMount = () => {\n    if (this.props.authState.isAuthenticated || hlp.getCookie('token')) {\n      const token = hlp.getCookie('token');\n      if (token) {\n        jwt.verify(token, 'secretkey23456', (err, decoded) => {\n          if (decoded) {\n            this.getUserData(decoded.email);\n          }\n        });\n      }\n    } else {\n      Axios.get('https://jsonplaceholder.typicode.com/posts').then((response) => {\n        localForage.getItem('tasks').then((data) => {\n          if (data) {\n            this.props.updateTasks(data.value);\n            return;\n          }\n        })\n        const updatedResponse = response.data.slice(1, 10);\n        const tasks = [];\n        updatedResponse.map((result, index) => {\n          // for better UI\n          const priority = ['Medium', 'High', 'Medium', 'High', 'Low', 'Medium', 'High', 'Low', 'Medium', 'High'];\n          const completed = [true, false, true, true, false, true, false, false, false, false];\n          /***/\n          tasks.push({\n            title: result.title,\n            description: result.body,\n            completed: completed[index],\n            priority: priority[index]\n          });\n        });\n        this.props.updateTasks(tasks);\n      });\n    };\n  }\n\n  getUserData(email) {\n    Axios.post('https://mybird-todo.herokuapp.com/get-data', { email: email }, { 'Content-Type': 'application/json' }).then((result) => {\n      const tasks = result.data.tasks;\n      this.props.fetchTasks({ tasks: tasks, email: result.data.email });\n    })\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    taskState: state.taskState,\n    authState: state.authState\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateTasks: (tasks) => dispatch(actions.updateTask(tasks)),\n    fetchTasks: ({ tasks, email }) => dispatch(actions.fetchTasks({ tasks, email })),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport Scrol from './components/scrol/Scrol';\nimport Home from './pages/home/Home';\nimport Todo from './pages/todo/Todo';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/todos\" exact component={Todo} />\n            <Route path=\"/scroll\" exact component={Scrol} />\n          </Switch>\n          <Footer />\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  taskState: {\n    tasks: []\n  },\n  authState: {\n    isAuthenticated: false,\n    email: ''\n  }\n}\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'UPDATE_TASK':\n      return {\n        ...state,\n        taskState: { tasks: action.value, openNewTodo: false }\n      }\n\n    case 'FETCH_TASKS_DATA':\n      return {\n        ...state,\n        taskState: { tasks: action.value.tasks },\n        authState: { isAuthenticated: true, email: action.value.email }\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default Reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport Reducer from './store/reducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App title=\"My Bird\" /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}